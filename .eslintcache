[{"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\index.js":"1","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\reportWebVitals.js":"2","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\shared\\routes\\index.js":"3","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\store\\index.js":"4","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\index.js":"5","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\login.reducer.js":"6","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\layout.reducer.js":"7","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\types.js":"8","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\index.js":"9","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\home.js":"10","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\signin.js":"11","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\signIn.js":"12","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\layout.js":"13","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\api\\login.api.js":"14","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\login.actions.js":"15","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\frm\\frmSignIn.js":"16","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\shared\\utils\\setAuthToken.js":"17","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\layout.actions.js":"18","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\configuracion.js":"19","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmConfig.js":"20","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\api\\materias.api.js":"21","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\modal.js":"22","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmPregunta.js":"23","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\api\\preguntas.api.js":"24","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\simulacro\\pregunta.js":"25","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\data.reducer.js":"26","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\data.actions.js":"27","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmResultados.js":"28","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmMateria.js":"29","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\dialog.js":"30","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\index.js":"31","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\reportWebVitals.js":"32","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\login.actions.js":"33","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\shared\\utils\\setAuthToken.js":"34","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\store\\index.js":"35","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\shared\\routes\\index.js":"36","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\types.js":"37","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\layout.actions.js":"38","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\api\\login.api.js":"39","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\index.js":"40","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\index.js":"41","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\login.reducer.js":"42","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\layout.reducer.js":"43","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\data.reducer.js":"44","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\home.js":"45","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\signIn.js":"46","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\layout.js":"47","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\configuracion.js":"48","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\api\\materias.api.js":"49","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\data.actions.js":"50","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\simulacro\\pregunta.js":"51","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\frm\\frmSignIn.js":"52","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmConfig.js":"53","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\api\\preguntas.api.js":"54","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\modal.js":"55","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\dialog.js":"56","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmMateria.js":"57","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmResultados.js":"58","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmPregunta.js":"59","D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\alert\\Alert.js":"60"},{"size":993,"mtime":1610908684582,"results":"61","hashOfConfig":"62"},{"size":362,"mtime":499162500000,"results":"63","hashOfConfig":"62"},{"size":603,"mtime":1610987706217,"results":"64","hashOfConfig":"62"},{"size":418,"mtime":1612040094119,"results":"65","hashOfConfig":"62"},{"size":191,"mtime":1612040630842,"results":"66","hashOfConfig":"62"},{"size":461,"mtime":1612364737448,"results":"67","hashOfConfig":"62"},{"size":500,"mtime":1612040051330,"results":"68","hashOfConfig":"62"},{"size":217,"mtime":1612046456988,"results":"69","hashOfConfig":"62"},{"size":201,"mtime":1610987697207,"results":"70","hashOfConfig":"62"},{"size":1183,"mtime":1612560717205,"results":"71","hashOfConfig":"62"},{"size":300,"mtime":1610900185018,"results":"72","hashOfConfig":"62"},{"size":1346,"mtime":1610903485637,"results":"73","hashOfConfig":"62"},{"size":3785,"mtime":1611710373038,"results":"74","hashOfConfig":"62"},{"size":244,"mtime":1610984036801,"results":"75","hashOfConfig":"62"},{"size":969,"mtime":1612360346829,"results":"76","hashOfConfig":"62"},{"size":3537,"mtime":1612360307168,"results":"77","hashOfConfig":"62"},{"size":1574,"mtime":1611710320501,"results":"78","hashOfConfig":"62"},{"size":257,"mtime":1610986740707,"results":"79","hashOfConfig":"62"},{"size":828,"mtime":1612565862932,"results":"80","hashOfConfig":"62"},{"size":13447,"mtime":1612793324845,"results":"81","hashOfConfig":"62"},{"size":646,"mtime":1612565091775,"results":"82","hashOfConfig":"62"},{"size":8123,"mtime":1612793732447,"results":"83","hashOfConfig":"62"},{"size":16833,"mtime":1612636281709,"results":"84","hashOfConfig":"62"},{"size":491,"mtime":1612573236713,"results":"85","hashOfConfig":"62"},{"size":14457,"mtime":1612455086366,"results":"86","hashOfConfig":"62"},{"size":361,"mtime":1612046895560,"results":"87","hashOfConfig":"62"},{"size":798,"mtime":1612560679910,"results":"88","hashOfConfig":"62"},{"size":1876,"mtime":1612069910861,"results":"89","hashOfConfig":"62"},{"size":534,"mtime":1612633739027,"results":"90","hashOfConfig":"62"},{"size":1741,"mtime":1612567442358,"results":"91","hashOfConfig":"62"},{"size":993,"mtime":1610908684582,"results":"92","hashOfConfig":"93"},{"size":362,"mtime":499162500000,"results":"94","hashOfConfig":"93"},{"size":961,"mtime":1613328984932,"results":"95","hashOfConfig":"93"},{"size":1651,"mtime":1613328732369,"results":"96","hashOfConfig":"93"},{"size":418,"mtime":1612040094119,"results":"97","hashOfConfig":"93"},{"size":603,"mtime":1610987706217,"results":"98","hashOfConfig":"93"},{"size":217,"mtime":1612046456988,"results":"99","hashOfConfig":"93"},{"size":257,"mtime":1610986740707,"results":"100","hashOfConfig":"93"},{"size":244,"mtime":1610984036801,"results":"101","hashOfConfig":"93"},{"size":191,"mtime":1612040630842,"results":"102","hashOfConfig":"93"},{"size":201,"mtime":1610987697207,"results":"103","hashOfConfig":"93"},{"size":461,"mtime":1613328954979,"results":"104","hashOfConfig":"93"},{"size":500,"mtime":1612040051330,"results":"105","hashOfConfig":"93"},{"size":361,"mtime":1612046895560,"results":"106","hashOfConfig":"93"},{"size":1458,"mtime":1613327580177,"results":"107","hashOfConfig":"93"},{"size":1827,"mtime":1613325150858,"results":"108","hashOfConfig":"93"},{"size":4396,"mtime":1613329096360,"results":"109","hashOfConfig":"93"},{"size":828,"mtime":1612565862932,"results":"110","hashOfConfig":"93"},{"size":646,"mtime":1612565091775,"results":"111","hashOfConfig":"93"},{"size":798,"mtime":1612560679910,"results":"112","hashOfConfig":"93"},{"size":14457,"mtime":1612455086366,"results":"113","hashOfConfig":"93"},{"size":3570,"mtime":1613329369243,"results":"114","hashOfConfig":"93"},{"size":13447,"mtime":1612793324845,"results":"115","hashOfConfig":"93"},{"size":491,"mtime":1612573236713,"results":"116","hashOfConfig":"93"},{"size":8123,"mtime":1612793732447,"results":"117","hashOfConfig":"93"},{"size":1741,"mtime":1612567442358,"results":"118","hashOfConfig":"93"},{"size":534,"mtime":1612633739027,"results":"119","hashOfConfig":"93"},{"size":1876,"mtime":1612069910861,"results":"120","hashOfConfig":"93"},{"size":16833,"mtime":1612636281709,"results":"121","hashOfConfig":"93"},{"size":1270,"mtime":1613325116754,"results":"122","hashOfConfig":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},"ry72v",{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"125"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"125"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"125"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"125"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"125"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},"yu29kx",{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"193"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"193"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"193"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"193"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"193"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\index.js",[],["252","253"],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\reportWebVitals.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\shared\\routes\\index.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\store\\index.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\index.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\login.reducer.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\layout.reducer.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\types.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\index.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\home.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\signin.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\signIn.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\layout.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\api\\login.api.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\login.actions.js",["254"],"import { SET_USER } from \"./types\";\r\n// import setAuthorizationToken from \"../shared/utils/setAuthToken\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { loginService} from \"../api/login.api\";\r\nimport JwtDecode from \"jwt-decode\";\r\nimport setAuthorizationToken from \"../shared/utils/setAuthToken\";\r\n\r\nexport function setCurrentUser(user) {\r\n  let { email, name, role } = user;\r\n  return {\r\n    type: SET_USER,\r\n    payload: { email, name, root: role === \"Admin\" },\r\n  };\r\n}\r\n\r\nexport function login(data) {\r\n  return async (dispatch) => {\r\n    let { email, password } = data;\r\n    return loginService({ email, password }).then(\r\n      (res) => {\r\n        const token = res.data;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        setAuthorizationToken();\r\n        const user = jwtDecode(token);\r\n        console.log(\"user\", user)\r\n        dispatch(setCurrentUser(user));\r\n      },\r\n      (err) => {\r\n        return Promise.reject(err);\r\n      }\r\n    );\r\n  };\r\n}\r\n","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\frm\\frmSignIn.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\shared\\utils\\setAuthToken.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\layout.actions.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\configuracion.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmConfig.js",["255","256","257","258"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  withStyles,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  Box,\r\n  Typography,\r\n  Collapse,\r\n  Table,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  Toolbar,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddCircleOutlineRoundedIcon from \"@material-ui/icons/AddCircleOutlineRounded\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport {\r\n  getQuestionsbyMateria,\r\n  deleteMateriaById,\r\n  getMaterias,\r\n  createMateria,\r\n} from \"../../../api/materias.api\";\r\nimport CustomizedDialogs from \"./modal\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport AlertDialog from \"./dialog\";\r\nimport {\r\n  createQuestion,\r\n  deletePreguntaById,\r\n  updateQuestion,\r\n} from \"../../../api/preguntas.api\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#fff\",\r\n    height: \"100%\",\r\n    borderRadius: 15,\r\n    padding: 30,\r\n  },\r\n  table: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n    },\r\n  },\r\n  button: {\r\n    textTransform: \"none\",\r\n  },\r\n  grid: {\r\n    padding: 20,\r\n  },\r\n  toolbar: { backgroundColor: \"rgb(103, 58, 183)\", color: \"#fff\" },\r\n  toolbarTitle: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n});\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    color: theme.palette.getContrastText(\"#673ab7\"),\r\n    backgroundColor: \"#673ab7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#492884\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nexport default function FrmConfig(props) {\r\n  const classes = useStyles();\r\n  const [materias, setMaterias] = React.useState([]);\r\n  const [materia, setMateria] = React.useState({ materiaId: 0, nombre: \"\" });\r\n  const [preguntas, setPreguntas] = React.useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [page, setPage] = React.useState(0);\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const [openDialog, setOpenDialog] = React.useState({\r\n    open: false,\r\n    Title: \"\",\r\n    Content: \"\",\r\n  });\r\n  const [Modal, setModal] = React.useState({});\r\n\r\n  const cargarMaterias = () => {\r\n    getMaterias().then(\r\n      (res) => {\r\n        setMaterias(res.data);\r\n      },\r\n      (err) => {}\r\n    );\r\n  };\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value) {\r\n      setMateria(value);\r\n      loadQuestion(value.materiaId);\r\n    } else {\r\n      setMateria({ materiaId: 0, nombre: \"\" });\r\n      setPreguntas([]);\r\n    }\r\n  };\r\n\r\n  const loadQuestion = (materiaId) => {\r\n    getQuestionsbyMateria(materiaId).then(\r\n      (res) => {\r\n        setPreguntas(res.data);\r\n      },\r\n      (err) => {}\r\n    );\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let rows = parseInt(event.target.value, 10);\r\n\r\n    setRowsPerPage(rows);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const deleteMateria = async () => {\r\n    await deleteMateriaById(materia.materiaId);\r\n    setMateria({ materiaId: 0, nombre: \"\" });\r\n    cargarMaterias();\r\n  };\r\n\r\n  const deletePregunta = async (data) => {\r\n    await deletePreguntaById(data).then(\r\n      (res) => {\r\n        loadQuestion(materia.materiaId);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const crearMateria = (data) => {\r\n    createMateria(data).then(\r\n      (res) => {\r\n        cargarMaterias();\r\n        setOpenModal(false);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const crearPregunta = (data) => {\r\n    if (data.PreguntaId && data.PreguntaId > 0)\r\n      updateQuestion(data).then(\r\n        (res) => {\r\n          loadQuestion(materia.materiaId);\r\n          setOpenModal(false);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    else\r\n      createQuestion(data).then(\r\n        (res) => {\r\n          loadQuestion(materia.materiaId);\r\n          setOpenModal(false);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarMaterias();\r\n  }, []);\r\n\r\n  function Row(props) {\r\n    const { row, setOpenModal, setModal } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <TableRow className={classes.table}>\r\n          <TableCell width={50}>\r\n            <IconButton\r\n              aria-label=\"expand row\"\r\n              size=\"small\"\r\n              onClick={() => setOpen(!open)}\r\n            >\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell component=\"th\" scope=\"row\">\r\n            {row.imagen && row.imagen != \"\" ? (\r\n              <img width={50} height={50} src={row.imagen}></img>\r\n            ) : (\r\n              row.descripcion\r\n            )}\r\n          </TableCell>\r\n          <TableCell width={50} style={{ display: \"flex\", float: \"right\" }}>\r\n            <IconButton\r\n              aria-label=\"expand row\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setModal({\r\n                  Title: \"Preguntas\",\r\n                  Content: \"frmPreguntas\",\r\n                  Item: row,\r\n                  AgreeFunction: crearPregunta,\r\n                });\r\n                setOpenModal(true);\r\n              }}\r\n            >\r\n              <EditOutlinedIcon></EditOutlinedIcon>\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label=\"expand row\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpenDialog({\r\n                  open: true,\r\n                  Title: \"Eliminar Pregunta\",\r\n                  Content: `Seguro de que desea eliminar la pregunta \"${row.descripcion.substring(\r\n                    0,\r\n                    30\r\n                  )}...\"?`,\r\n                  AgreeFunction: deletePregunta,\r\n                  ItemId: row.preguntaId,\r\n                });\r\n              }}\r\n            >\r\n              <DeleteOutlineOutlinedIcon></DeleteOutlineOutlinedIcon>\r\n            </IconButton>\r\n          </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  Respuestas\r\n                </Typography>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableBody>\r\n                    {row.opcionRespuestas.map((opciones, i) => (\r\n                      <TableRow key={i}>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{ display: \"flex\" }}\r\n                        >\r\n                          {opciones.imagen && opciones.imagen != \"\" ? (\r\n                            <>\r\n                              <div style={{ marginTop: 15, marginRight: 10 }}>\r\n                                {i + 1 + \".\"}\r\n                              </div>\r\n                              <img\r\n                                width={50}\r\n                                height={50}\r\n                                src={opciones.imagen}\r\n                              ></img>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <div style={{ marginRight: 10 }}>\r\n                                {i + 1 + \".\"}\r\n                              </div>\r\n                              {opciones.descripcion}\r\n                            </>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid className={classes.grid} container spacing={3} alignItems=\"center\">\r\n        <Grid item sm={6} lg={3}>\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={materias}\r\n            getOptionLabel={(option) =>\r\n              typeof option === \"string\" ? option : option.nombre\r\n            }\r\n            style={{ width: \"100%\" }}\r\n            value={materia}\r\n            onChange={handleChange}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Materia\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Grid item sm={6} lg={4} >\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6} lg={3} md={4}>\r\n              <ColorButton\r\n                color=\"inherit\"\r\n                size=\"large\"\r\n                className={classes.button}\r\n                startIcon={<AddCircleOutlineRoundedIcon />}\r\n                disableRipple\r\n                onClick={() => {\r\n                  setModal({\r\n                    Title: \"Materias\",\r\n                    Content: \"frmMaterias\",\r\n                    AgreeFunction: crearMateria,\r\n                  });\r\n                  setOpenModal(true);\r\n                }}\r\n              >\r\n                Agregar\r\n              </ColorButton>\r\n            </Grid>\r\n            <Grid item sm={6} lg={3} md={4}>\r\n              {materia.materiaId ? (\r\n                <ColorButton\r\n                  color=\"inherit\"\r\n                  size=\"large\"\r\n                  className={classes.button}\r\n                  startIcon={<DeleteOutlineOutlinedIcon />}\r\n                  disableRipple\r\n                  onClick={() => {\r\n                    setOpenDialog({\r\n                      open: true,\r\n                      Title: \"Eliminar Materia\",\r\n                      Content: `Seguro de que desea eliminar la materia ${materia.nombre}?`,\r\n                      AgreeFunction: deleteMateria,\r\n                    });\r\n                  }}\r\n                >\r\n                  Eliminar\r\n                </ColorButton>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}></Grid>\r\n      </Grid>\r\n      <Grid className={classes.grid} container alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <Typography className={classes.toolbarTitle} variant=\"h6\">\r\n              Preguntas\r\n            </Typography>\r\n            {materia.materiaId ? (\r\n              <Button\r\n                color=\"inherit\"\r\n                size=\"large\"\r\n                className={classes.button}\r\n                startIcon={<AddCircleOutlineRoundedIcon />}\r\n                disableRipple\r\n                onClick={() => {\r\n                  setModal({\r\n                    Title: \"Preguntas\",\r\n                    Content: \"frmPreguntas\",\r\n                    AgreeFunction: crearPregunta,\r\n                  });\r\n                  setOpenModal(true);\r\n                }}\r\n              >\r\n                Agregar\r\n              </Button>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Toolbar>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell />\r\n                  <TableCell>Pregunta</TableCell>\r\n                  <TableCell width={50}>Acciones</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {materia.materiaId ? (\r\n                  preguntas\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row) => (\r\n                      <Row\r\n                        key={row.preguntaId}\r\n                        row={row}\r\n                        setModal={setModal}\r\n                        setOpenModal={setOpenModal}\r\n                      />\r\n                    ))\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={preguntas.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage=\"Filas por pagina:\"\r\n            nextIconButtonText=\"Siguiente\"\r\n            backIconButtonText=\"Anterior\"\r\n            labelDisplayedRows={({ from, to, count }) =>\r\n              `${from}-${to} de ${count}`\r\n            }\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <CustomizedDialogs\r\n        {...Modal}\r\n        MateriaId={materia.materiaId}\r\n        Open={openModal}\r\n        SetOpen={setOpenModal}\r\n      ></CustomizedDialogs>\r\n      <AlertDialog {...openDialog} setOpen={setOpenDialog}></AlertDialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\api\\materias.api.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\modal.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmPregunta.js",["259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],"import {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ImageSearchOutlinedIcon from \"@material-ui/icons/ImageSearchOutlined\";\r\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\r\nimport Pregunta from \"../../simulacro/pregunta\";\r\n\r\nconst FrmPregunta = (props) => {\r\n  const { pregunta, setPregunta } = props;\r\n\r\n  const [imagen, setImagen] = useState({\r\n    pregunta: pregunta.preguntaImagen && pregunta.preguntaImagen != \"\",\r\n    opcion1: pregunta.opcion1Imagen && pregunta.opcion1Imagen != \"\",\r\n    opcion2: pregunta.opcion2Imagen && pregunta.opcion2Imagen != \"\",\r\n    opcion3: pregunta.opcion3Imagen && pregunta.opcion3Imagen != \"\",\r\n    opcion4: pregunta.opcion4Imagen && pregunta.opcion4Imagen != \"\",\r\n  });\r\n\r\n  const handleChange = (value) => {\r\n    setPregunta({ ...pregunta, esCorrecto: value });\r\n  };\r\n\r\n  const handleImagen = (data) => {\r\n    setImagen({ ...imagen, ...data });\r\n  };\r\n\r\n  const handleImageChange = (e, opcion) => {\r\n    e.preventDefault();\r\n    let file = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      switch (opcion) {\r\n        case 0:\r\n          setPregunta({\r\n            ...pregunta,\r\n            preguntaPath: reader.result,\r\n            pregunta: \"\",\r\n          });\r\n          break;\r\n        case 1:\r\n          setPregunta({ ...pregunta, opcion1Path: reader.result, opcion1: \"\" });\r\n          break;\r\n        case 2:\r\n          setPregunta({ ...pregunta, opcion2Path: reader.result, opcion2: \"\" });\r\n          break;\r\n        case 3:\r\n          setPregunta({ ...pregunta, opcion3Path: reader.result, opcion3: \"\" });\r\n          break;\r\n        case 4:\r\n          setPregunta({ ...pregunta, opcion4Path: reader.result, opcion4: \"\" });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <form>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item xs={12}>\r\n            {!imagen.pregunta ? (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                autoComplete=\"off\"\r\n                required\r\n                error={props.Errors.pregunta}\r\n                fullWidth\r\n                name=\"pregunta\"\r\n                label=\"Pregunta\"\r\n                type=\"text\"\r\n                id=\"pregunta\"\r\n                value={pregunta.pregunta}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          handleImagen({ pregunta: !imagen.pregunta });\r\n                        }}\r\n                      >\r\n                        <ImageSearchOutlinedIcon />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setPregunta({ ...pregunta, pregunta: e.target.value });\r\n                }}\r\n              />\r\n            ) : (\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {pregunta.preguntaImagen && pregunta.preguntaImagen != \"\" ? (\r\n                  <img\r\n                    src={pregunta.preguntaImagen}\r\n                    style={{ marginTop: 8, marginRight: 8 }}\r\n                    width={50}\r\n                    height={50}\r\n                  ></img>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                <TextField\r\n                  type=\"file\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"off\"\r\n                  required\r\n                  error={props.Errors.pregunta}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            handleImagen({ pregunta: !imagen.pregunta });\r\n                          }}\r\n                        >\r\n                          <ChatOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    handleImageChange(e, 0);\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item xs={10}>\r\n            {!imagen.opcion1 ? (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                autoComplete=\"off\"\r\n                required\r\n                fullWidth\r\n                name=\"opcion1\"\r\n                label=\"Opcion 1\"\r\n                type=\"text\"\r\n                id=\"opcion1\"\r\n                error={props.Errors.opcion1}\r\n                value={pregunta.opcion1}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          handleImagen({ opcion1: !imagen.opcion1 });\r\n                        }}\r\n                      >\r\n                        <ImageSearchOutlinedIcon />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setPregunta({ ...pregunta, opcion1: e.target.value });\r\n                }}\r\n              />\r\n            ) : (\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {pregunta.opcion1Imagen && pregunta.opcion1Imagen != \"\" ? (\r\n                  <img\r\n                    src={pregunta.opcion1Imagen}\r\n                    style={{ marginTop: 8, marginRight: 8 }}\r\n                    width={50}\r\n                    height={50}\r\n                  ></img>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                <TextField\r\n                  type=\"file\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"off\"\r\n                  required\r\n                  error={props.Errors.opcion1}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            handleImagen({ opcion1: !imagen.opcion1 });\r\n                          }}\r\n                        >\r\n                          <ChatOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    handleImageChange(e, 1);\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={pregunta.esCorrecto === 1}\r\n                  onChange={() => {\r\n                    handleChange(1);\r\n                  }}\r\n                  name=\"esCorrecto\"\r\n                />\r\n              }\r\n              label=\"Correcto\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item xs={10}>\r\n            {!imagen.opcion2 ? (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                autoComplete=\"off\"\r\n                required\r\n                fullWidth\r\n                error={props.Errors.opcion2}\r\n                name=\"opcion2\"\r\n                label=\"Opcion 2\"\r\n                type=\"text\"\r\n                id=\"opcion2\"\r\n                value={pregunta.opcion2}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          handleImagen({ opcion2: !imagen.opcion2 });\r\n                        }}\r\n                      >\r\n                        <ImageSearchOutlinedIcon />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setPregunta({ ...pregunta, opcion2: e.target.value });\r\n                }}\r\n              />\r\n            ) : (\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {pregunta.opcion2Imagen && pregunta.opcion2Imagen != \"\" ? (\r\n                  <img\r\n                    src={pregunta.opcion2Imagen}\r\n                    style={{ marginTop: 8, marginRight: 8 }}\r\n                    width={50}\r\n                    height={50}\r\n                  ></img>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                <TextField\r\n                  type=\"file\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"off\"\r\n                  required\r\n                  error={props.Errors.opcion2}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            handleImagen({ opcion2: !imagen.opcion2 });\r\n                          }}\r\n                        >\r\n                          <ChatOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    handleImageChange(e, 2);\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={pregunta.esCorrecto === 2}\r\n                  onChange={() => {\r\n                    handleChange(2);\r\n                  }}\r\n                  name=\"esCorrecto\"\r\n                />\r\n              }\r\n              label=\"Correcto\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item xs={10}>\r\n            {!imagen.opcion3 ? (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                autoComplete=\"off\"\r\n                required\r\n                fullWidth\r\n                error={props.Errors.opcion3}\r\n                name=\"opcion3\"\r\n                label=\"Opcion 3\"\r\n                type=\"text\"\r\n                id=\"opcion3\"\r\n                value={pregunta.opcion3}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          handleImagen({ opcion3: !imagen.opcion3 });\r\n                        }}\r\n                      >\r\n                        <ImageSearchOutlinedIcon />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setPregunta({ ...pregunta, opcion3: e.target.value });\r\n                }}\r\n              />\r\n            ) : (\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {pregunta.opcion3Imagen && pregunta.opcion3Imagen != \"\" ? (\r\n                  <img\r\n                    src={pregunta.opcion3Imagen}\r\n                    style={{ marginTop: 8, marginRight: 8 }}\r\n                    width={50}\r\n                    height={50}\r\n                  ></img>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                <TextField\r\n                  type=\"file\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"off\"\r\n                  required\r\n                  error={props.Errors.opcion3}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            handleImagen({ opcion3: !imagen.opcion3 });\r\n                          }}\r\n                        >\r\n                          <ChatOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    handleImageChange(e, 3);\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={pregunta.esCorrecto === 3}\r\n                  onChange={() => {\r\n                    handleChange(3);\r\n                  }}\r\n                  name=\"esCorrecto\"\r\n                />\r\n              }\r\n              label=\"Correcto\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item xs={10}>\r\n            {!imagen.opcion4 ? (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                autoComplete=\"off\"\r\n                fullWidth\r\n                error={props.Errors.opcion4}\r\n                name=\"opcion4\"\r\n                label=\"Opcion 4\"\r\n                type=\"text\"\r\n                id=\"opcion4\"\r\n                value={pregunta.opcion4}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          handleImagen({ opcion4: !imagen.opcion4 });\r\n                        }}\r\n                      >\r\n                        <ImageSearchOutlinedIcon />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setPregunta({ ...pregunta, opcion4: e.target.value });\r\n                }}\r\n              />\r\n            ) : (\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {pregunta.opcion4Imagen && pregunta.opcion4Imagen != \"\" ? (\r\n                  <img\r\n                    src={pregunta.opcion4Imagen}\r\n                    style={{ marginTop: 8, marginRight: 8 }}\r\n                    width={50}\r\n                    height={50}\r\n                  ></img>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                <TextField\r\n                  type=\"file\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"off\"\r\n                  required\r\n                  error={props.Errors.opcion4}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            handleImagen({ opcion4: !imagen.opcion4 });\r\n                          }}\r\n                        >\r\n                          <ChatOutlinedIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    handleImageChange(e, 4);\r\n                  }}\r\n                ></TextField>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={pregunta.esCorrecto === 4}\r\n                  onChange={() => {\r\n                    handleChange(4);\r\n                  }}\r\n                  name=\"esCorrecto\"\r\n                />\r\n              }\r\n              label=\"Correcto\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrmPregunta;\r\n",["276","277"],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\api\\preguntas.api.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\simulacro\\pregunta.js",["278","279","280","281","282","283","284","285","286","287","288"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  useTheme,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport PlayCircleFilledWhiteOutlinedIcon from \"@material-ui/icons/PlayCircleFilledWhiteOutlined\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport StopRoundedIcon from \"@material-ui/icons/StopRounded\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SET_QUESTIONS } from \"../../actions/types\";\r\nimport { sendAnswers } from \"../../api/preguntas.api\";\r\nimport CustomizedDialogs from \"../configuracion/frm/modal\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#fff\",\r\n    height: \"100%\",\r\n    borderRadius: 15,\r\n    padding: 10,\r\n    marginBottom: 20,\r\n  },\r\n  grid: {\r\n    padding: 20,\r\n  },\r\n  gridTitulo: {\r\n    padding: \"0px 20px\",\r\n  },\r\n  pregunta: {\r\n    fontSize: 18,\r\n    textAlign: \"justify\",\r\n    marginLeft: 20,\r\n  },\r\n});\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(\"#673ab7\"),\r\n    backgroundColor: \"#673ab7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#492884\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst Pregunta = (props) => {\r\n  const [materia, setMateria] = React.useState({ materiaId: 0, nombre: \"\" });\r\n  const [iniciar, setIniciar] = React.useState(false);\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [respuesta, setRespuesta] = React.useState(0);\r\n  const [minutos, setMinutos] = React.useState(0);\r\n  const [segundos, setSegundos] = React.useState(0);\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const preguntas = useSelector((state) => state.data.q);\r\n  const maxSteps = preguntas.length;\r\n  const setQuestions = useDispatch();\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value) {\r\n      setMateria(value);\r\n    } else {\r\n      setMateria({ materiaId: 0, nombre: \"\" });\r\n    }\r\n  };\r\n\r\n  const handleChangeCheck = (value) => {\r\n    let pre = preguntas;\r\n    pre[activeStep].respuesta = value.opcionRespuestaId;\r\n\r\n    setQuestions({ type: SET_QUESTIONS, payload: pre });\r\n  };\r\n\r\n  const loadQuestion = () => {\r\n    if (!iniciar) {\r\n      if (Number.isInteger(materia.materiaId) && materia.materiaId != 0)\r\n        props.setPreguntas(materia.materiaId).then(\r\n          (res) => {\r\n            setIniciar(!iniciar);\r\n            setMinutos(0);\r\n            setSegundos(0);\r\n          },\r\n          (err) => {}\r\n        );\r\n    } else\r\n      sendAnswers(preguntas).then(\r\n        (res) => {\r\n          setIniciar(!iniciar);\r\n          setQuestions({ type: SET_QUESTIONS, payload: [] });\r\n          setActiveStep(0);\r\n          setRespuesta({ ...res.data[0], nombreMateria: materia.nombre });\r\n          setOpenModal(true);\r\n        },\r\n        (err) => alert(\"paila\")\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if (iniciar) {\r\n      if (segundos === 59) {\r\n        setSegundos(0);\r\n        setMinutos((minutos) => minutos + 1);\r\n      }\r\n\r\n      interval = setInterval(() => {\r\n        setSegundos((segundos) => segundos + 1);\r\n      }, 1000);\r\n    } else if (!iniciar && segundos !== 0) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [iniciar, segundos]);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Grid\r\n          className={classes.grid}\r\n          container\r\n          spacing={3}\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={3}>\r\n            <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={props.Materias}\r\n              getOptionLabel={(option) =>\r\n                typeof option === \"string\" ? option : option.nombre\r\n              }\r\n              style={{ width: \"100%\" }}\r\n              value={materia}\r\n              onChange={handleChange}\r\n              disabled={iniciar}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Area\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={7}></Grid>\r\n\r\n          <Grid item xs={2}>\r\n            <ColorButton\r\n              color=\"inherit\"\r\n              size=\"large\"\r\n              className={classes.button}\r\n              startIcon={\r\n                iniciar ? (\r\n                  <StopRoundedIcon />\r\n                ) : (\r\n                  <PlayCircleFilledWhiteOutlinedIcon />\r\n                )\r\n              }\r\n              onClick={() => {\r\n                loadQuestion();\r\n              }}\r\n            >\r\n              {(iniciar ? \"Finalizar  \" : \"Iniciar  \") +\r\n                (minutos.toString().padStart(2, \"0\") +\r\n                  \":\" +\r\n                  segundos.toString().padStart(2, \"0\"))}\r\n            </ColorButton>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n      {preguntas.length > 0 ? (\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3} className={classes.gridTitulo}>\r\n            <Grid item xs={12}>\r\n              <div className=\"parallelogram\">\r\n                <div className=\"text\">\r\n                  <h4>Pregunta {activeStep + 1}</h4>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n              <p className={classes.pregunta}>\r\n                {preguntas[activeStep].descripcion}\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n              {preguntas[activeStep].imagen != \"\" ? (\r\n                <img style={{maxWidth:800}} src={preguntas[activeStep].imagen}></img>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid className={classes.grid} container spacing={3}>\r\n            <Grid item xs={6} className={classes.gridCol}>\r\n              <Grid container alignItems=\"center\" justify=\"flex-start\">\r\n                <Grid item xs={1}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={\r\n                          preguntas[activeStep].respuesta ===\r\n                          preguntas[activeStep].opcionRespuestas[0]\r\n                            .opcionRespuestaId\r\n                        }\r\n                        style={{\r\n                          color: \"#673ab7\",\r\n                        }}\r\n                        onChange={() => {\r\n                          handleChangeCheck(\r\n                            preguntas[activeStep].opcionRespuestas[0]\r\n                          );\r\n                        }}\r\n                        name=\"esCorrecto\"\r\n                      />\r\n                    }\r\n                    label={\"a.\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={11}>\r\n                  {preguntas[activeStep].opcionRespuestas[0].imagen != \"\" &&\r\n                  preguntas[activeStep].opcionRespuestas[0].imagen != null ? (\r\n                    <img\r\n                      width={100}\r\n                      src={preguntas[activeStep].opcionRespuestas[0].imagen}\r\n                    ></img>\r\n                  ) : (\r\n                    <label>\r\n                      {preguntas[activeStep].opcionRespuestas[0].descripcion}\r\n                    </label>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6} className={classes.gridCol}>\r\n              <Grid container alignItems=\"center\" justify=\"flex-start\">\r\n                <Grid item xs={1}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={\r\n                          preguntas[activeStep].respuesta ===\r\n                          preguntas[activeStep].opcionRespuestas[1]\r\n                            .opcionRespuestaId\r\n                        }\r\n                        style={{\r\n                          color: \"#673ab7\",\r\n                        }}\r\n                        onChange={() => {\r\n                          handleChangeCheck(\r\n                            preguntas[activeStep].opcionRespuestas[1]\r\n                          );\r\n                        }}\r\n                        name=\"esCorrecto\"\r\n                      />\r\n                    }\r\n                    label={\"b.\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={11}>\r\n                  {preguntas[activeStep].opcionRespuestas[1].imagen != \"\" &&\r\n                  preguntas[activeStep].opcionRespuestas[1].imagen != null ? (\r\n                    <img\r\n                      width={100}\r\n                      src={preguntas[activeStep].opcionRespuestas[1].imagen}\r\n                    ></img>\r\n                  ) : (\r\n                    <label>\r\n                      {preguntas[activeStep].opcionRespuestas[1].descripcion}\r\n                    </label>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid className={classes.grid} container spacing={3}>\r\n            <Grid item xs={6} className={classes.gridCol}>\r\n              <Grid container alignItems=\"center\" justify=\"flex-start\">\r\n                <Grid item xs={1}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={\r\n                          preguntas[activeStep].respuesta ===\r\n                          preguntas[activeStep].opcionRespuestas[2]\r\n                            .opcionRespuestaId\r\n                        }\r\n                        style={{\r\n                          color: \"#673ab7\",\r\n                        }}\r\n                        onChange={() => {\r\n                          handleChangeCheck(\r\n                            preguntas[activeStep].opcionRespuestas[2]\r\n                          );\r\n                        }}\r\n                        name=\"esCorrecto\"\r\n                      />\r\n                    }\r\n                    label={\"c.\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={11}>\r\n                  {preguntas[activeStep].opcionRespuestas[2].imagen != \"\" &&\r\n                  preguntas[activeStep].opcionRespuestas[2].imagen != null ? (\r\n                    <img\r\n                      width={100}\r\n                      src={preguntas[activeStep].opcionRespuestas[2].imagen}\r\n                    ></img>\r\n                  ) : (\r\n                    <label>\r\n                      {preguntas[activeStep].opcionRespuestas[2].descripcion}\r\n                    </label>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6} className={classes.gridCol}>\r\n              <Grid container alignItems=\"center\" justify=\"flex-start\">\r\n                <Grid item xs={1}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={\r\n                          preguntas[activeStep].respuesta ===\r\n                          preguntas[activeStep].opcionRespuestas[3]\r\n                            .opcionRespuestaId\r\n                        }\r\n                        style={{\r\n                          color: \"#673ab7\",\r\n                        }}\r\n                        onChange={() => {\r\n                          handleChangeCheck(\r\n                            preguntas[activeStep].opcionRespuestas[3]\r\n                          );\r\n                        }}\r\n                        name=\"esCorrecto\"\r\n                      />\r\n                    }\r\n                    label={\"d.\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={11}>\r\n                  {preguntas[activeStep].opcionRespuestas[3].imagen != \"\" &&\r\n                  preguntas[activeStep].opcionRespuestas[3].imagen != null ? (\r\n                    <img\r\n                      width={100}\r\n                      src={preguntas[activeStep].opcionRespuestas[3].imagen}\r\n                    ></img>\r\n                  ) : (\r\n                    <label>\r\n                      {preguntas[activeStep].opcionRespuestas[3].descripcion}\r\n                    </label>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <MobileStepper\r\n            style={{ marginTop: 30 }}\r\n            steps={maxSteps}\r\n            position=\"static\"\r\n            variant=\"text\"\r\n            activeStep={activeStep}\r\n            nextButton={\r\n              <Button\r\n                size=\"small\"\r\n                onClick={handleNext}\r\n                disabled={activeStep === maxSteps - 1}\r\n              >\r\n                Siguiente\r\n                {theme.direction === \"rtl\" ? (\r\n                  <KeyboardArrowLeft />\r\n                ) : (\r\n                  <KeyboardArrowRight />\r\n                )}\r\n              </Button>\r\n            }\r\n            backButton={\r\n              <Button\r\n                size=\"small\"\r\n                onClick={handleBack}\r\n                disabled={activeStep === 0}\r\n              >\r\n                {theme.direction === \"rtl\" ? (\r\n                  <KeyboardArrowRight />\r\n                ) : (\r\n                  <KeyboardArrowLeft />\r\n                )}\r\n                Anterior\r\n              </Button>\r\n            }\r\n          />\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <CustomizedDialogs\r\n        Title=\"Resultados\"\r\n        Content=\"frmResultados\"\r\n        Open={openModal}\r\n        SetOpen={setOpenModal}\r\n        Data={respuesta}\r\n      ></CustomizedDialogs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pregunta;\r\n","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\data.reducer.js",["289"],"import { SET_ANSWER, SET_QUESTIONS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  q: [],\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        q: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\data.actions.js",["290"],"import { SET_ANSWER, SET_QUESTIONS } from './types'\r\nimport { getQuestionsbyMateria, getRandomQuestionsbyMateria } from \"../api/materias.api\";\r\n\r\nexport function setQuestions(payload) {\r\n  return {\r\n    type: SET_QUESTIONS,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function getQuestions(data) {\r\n  return async (dispatch) => {\r\n    return getQuestionsbyMateria(data).then(\r\n      (res) => {\r\n        dispatch(setQuestions(res.data));\r\n      },\r\n      (err) => {\r\n        return Promise.reject(err);\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nexport function getRandomQuestions(data) {\r\n  return async (dispatch) => {\r\n    return getRandomQuestionsbyMateria(data).then(\r\n      (res) => {\r\n        dispatch(setQuestions(res.data));\r\n      },\r\n      (err) => {\r\n        return Promise.reject(err);\r\n      }\r\n    );\r\n  };\r\n}","D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmResultados.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmMateria.js",[],"D:\\Proyectos\\PruebasSaber\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\dialog.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\index.js",[],["291","292"],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\reportWebVitals.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\login.actions.js",["293","294"],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\shared\\utils\\setAuthToken.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\store\\index.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\shared\\routes\\index.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\types.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\layout.actions.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\api\\login.api.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\index.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\index.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\login.reducer.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\layout.reducer.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\reducers\\data.reducer.js",["295"],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\home.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\signIn.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\layout.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\configuracion.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\api\\materias.api.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\actions\\data.actions.js",["296"],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\simulacro\\pregunta.js",["297","298","299","300","301","302","303","304","305","306","307"],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\home\\frm\\frmSignIn.js",["308","309","310"],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmConfig.js",["311","312","313","314"],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\api\\preguntas.api.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\modal.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\dialog.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmMateria.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmResultados.js",[],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\configuracion\\frm\\frmPregunta.js",["315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331"],"D:\\Proyectos\\PruebasSaber\\Client\\pruebassaber\\src\\components\\alert\\Alert.js",["332"],{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","replacedBy":"336"},{"ruleId":"337","severity":1,"message":"338","line":5,"column":8,"nodeType":"339","messageId":"340","endLine":5,"endColumn":17},{"ruleId":"341","severity":1,"message":"342","line":206,"column":39,"nodeType":"343","messageId":"344","endLine":206,"endColumn":41},{"ruleId":"345","severity":1,"message":"346","line":207,"column":15,"nodeType":"347","endLine":207,"endColumn":60},{"ruleId":"341","severity":1,"message":"342","line":264,"column":63,"nodeType":"343","messageId":"344","endLine":264,"endColumn":65},{"ruleId":"345","severity":1,"message":"346","line":269,"column":31,"nodeType":"347","endLine":273,"endColumn":32},{"ruleId":"337","severity":1,"message":"348","line":6,"column":3,"nodeType":"339","messageId":"340","endLine":6,"endColumn":8},{"ruleId":"337","severity":1,"message":"349","line":13,"column":8,"nodeType":"339","messageId":"340","endLine":13,"endColumn":16},{"ruleId":"341","severity":1,"message":"342","line":19,"column":66,"nodeType":"343","messageId":"344","endLine":19,"endColumn":68},{"ruleId":"341","severity":1,"message":"342","line":20,"column":63,"nodeType":"343","messageId":"344","endLine":20,"endColumn":65},{"ruleId":"341","severity":1,"message":"342","line":21,"column":63,"nodeType":"343","messageId":"344","endLine":21,"endColumn":65},{"ruleId":"341","severity":1,"message":"342","line":22,"column":63,"nodeType":"343","messageId":"344","endLine":22,"endColumn":65},{"ruleId":"341","severity":1,"message":"342","line":23,"column":63,"nodeType":"343","messageId":"344","endLine":23,"endColumn":65},{"ruleId":"341","severity":1,"message":"342","line":103,"column":69,"nodeType":"343","messageId":"344","endLine":103,"endColumn":71},{"ruleId":"345","severity":1,"message":"346","line":104,"column":19,"nodeType":"347","endLine":109,"endColumn":20},{"ruleId":"341","severity":1,"message":"342","line":176,"column":67,"nodeType":"343","messageId":"344","endLine":176,"endColumn":69},{"ruleId":"345","severity":1,"message":"346","line":177,"column":19,"nodeType":"347","endLine":182,"endColumn":20},{"ruleId":"341","severity":1,"message":"342","line":263,"column":67,"nodeType":"343","messageId":"344","endLine":263,"endColumn":69},{"ruleId":"345","severity":1,"message":"346","line":264,"column":19,"nodeType":"347","endLine":269,"endColumn":20},{"ruleId":"341","severity":1,"message":"342","line":350,"column":67,"nodeType":"343","messageId":"344","endLine":350,"endColumn":69},{"ruleId":"345","severity":1,"message":"346","line":351,"column":19,"nodeType":"347","endLine":356,"endColumn":20},{"ruleId":"341","severity":1,"message":"342","line":437,"column":67,"nodeType":"343","messageId":"344","endLine":437,"endColumn":69},{"ruleId":"345","severity":1,"message":"346","line":438,"column":19,"nodeType":"347","endLine":443,"endColumn":20},{"ruleId":"333","replacedBy":"350"},{"ruleId":"335","replacedBy":"351"},{"ruleId":"341","severity":1,"message":"342","line":87,"column":68,"nodeType":"343","messageId":"344","endLine":87,"endColumn":70},{"ruleId":"341","severity":1,"message":"342","line":206,"column":45,"nodeType":"343","messageId":"344","endLine":206,"endColumn":47},{"ruleId":"345","severity":1,"message":"346","line":207,"column":17,"nodeType":"347","endLine":207,"endColumn":80},{"ruleId":"341","severity":1,"message":"342","line":241,"column":69,"nodeType":"343","messageId":"344","endLine":241,"endColumn":71},{"ruleId":"345","severity":1,"message":"346","line":243,"column":21,"nodeType":"347","endLine":246,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":281,"column":69,"nodeType":"343","messageId":"344","endLine":281,"endColumn":71},{"ruleId":"345","severity":1,"message":"346","line":283,"column":21,"nodeType":"347","endLine":286,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":323,"column":69,"nodeType":"343","messageId":"344","endLine":323,"endColumn":71},{"ruleId":"345","severity":1,"message":"346","line":325,"column":21,"nodeType":"347","endLine":328,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":363,"column":69,"nodeType":"343","messageId":"344","endLine":363,"endColumn":71},{"ruleId":"345","severity":1,"message":"346","line":365,"column":21,"nodeType":"347","endLine":368,"endColumn":22},{"ruleId":"337","severity":1,"message":"352","line":1,"column":10,"nodeType":"339","messageId":"340","endLine":1,"endColumn":20},{"ruleId":"337","severity":1,"message":"352","line":1,"column":10,"nodeType":"339","messageId":"340","endLine":1,"endColumn":20},{"ruleId":"333","replacedBy":"353"},{"ruleId":"335","replacedBy":"354"},{"ruleId":"337","severity":1,"message":"338","line":5,"column":8,"nodeType":"339","messageId":"340","endLine":5,"endColumn":17},{"ruleId":"337","severity":1,"message":"355","line":9,"column":22,"nodeType":"339","messageId":"340","endLine":9,"endColumn":26},{"ruleId":"337","severity":1,"message":"352","line":1,"column":10,"nodeType":"339","messageId":"340","endLine":1,"endColumn":20},{"ruleId":"337","severity":1,"message":"352","line":1,"column":10,"nodeType":"339","messageId":"340","endLine":1,"endColumn":20},{"ruleId":"341","severity":1,"message":"342","line":87,"column":68,"nodeType":"343","messageId":"344","endLine":87,"endColumn":70},{"ruleId":"341","severity":1,"message":"342","line":206,"column":45,"nodeType":"343","messageId":"344","endLine":206,"endColumn":47},{"ruleId":"345","severity":1,"message":"346","line":207,"column":17,"nodeType":"347","endLine":207,"endColumn":80},{"ruleId":"341","severity":1,"message":"342","line":241,"column":69,"nodeType":"343","messageId":"344","endLine":241,"endColumn":71},{"ruleId":"345","severity":1,"message":"346","line":243,"column":21,"nodeType":"347","endLine":246,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":281,"column":69,"nodeType":"343","messageId":"344","endLine":281,"endColumn":71},{"ruleId":"345","severity":1,"message":"346","line":283,"column":21,"nodeType":"347","endLine":286,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":323,"column":69,"nodeType":"343","messageId":"344","endLine":323,"endColumn":71},{"ruleId":"345","severity":1,"message":"346","line":325,"column":21,"nodeType":"347","endLine":328,"endColumn":22},{"ruleId":"341","severity":1,"message":"342","line":363,"column":69,"nodeType":"343","messageId":"344","endLine":363,"endColumn":71},{"ruleId":"345","severity":1,"message":"346","line":365,"column":21,"nodeType":"347","endLine":368,"endColumn":22},{"ruleId":"337","severity":1,"message":"356","line":6,"column":8,"nodeType":"339","messageId":"340","endLine":6,"endColumn":24},{"ruleId":"337","severity":1,"message":"357","line":7,"column":8,"nodeType":"339","messageId":"340","endLine":7,"endColumn":16},{"ruleId":"337","severity":1,"message":"358","line":9,"column":8,"nodeType":"339","messageId":"340","endLine":9,"endColumn":12},{"ruleId":"341","severity":1,"message":"342","line":206,"column":39,"nodeType":"343","messageId":"344","endLine":206,"endColumn":41},{"ruleId":"345","severity":1,"message":"346","line":207,"column":15,"nodeType":"347","endLine":207,"endColumn":60},{"ruleId":"341","severity":1,"message":"342","line":264,"column":63,"nodeType":"343","messageId":"344","endLine":264,"endColumn":65},{"ruleId":"345","severity":1,"message":"346","line":269,"column":31,"nodeType":"347","endLine":273,"endColumn":32},{"ruleId":"337","severity":1,"message":"348","line":6,"column":3,"nodeType":"339","messageId":"340","endLine":6,"endColumn":8},{"ruleId":"337","severity":1,"message":"349","line":13,"column":8,"nodeType":"339","messageId":"340","endLine":13,"endColumn":16},{"ruleId":"341","severity":1,"message":"342","line":19,"column":66,"nodeType":"343","messageId":"344","endLine":19,"endColumn":68},{"ruleId":"341","severity":1,"message":"342","line":20,"column":63,"nodeType":"343","messageId":"344","endLine":20,"endColumn":65},{"ruleId":"341","severity":1,"message":"342","line":21,"column":63,"nodeType":"343","messageId":"344","endLine":21,"endColumn":65},{"ruleId":"341","severity":1,"message":"342","line":22,"column":63,"nodeType":"343","messageId":"344","endLine":22,"endColumn":65},{"ruleId":"341","severity":1,"message":"342","line":23,"column":63,"nodeType":"343","messageId":"344","endLine":23,"endColumn":65},{"ruleId":"341","severity":1,"message":"342","line":103,"column":69,"nodeType":"343","messageId":"344","endLine":103,"endColumn":71},{"ruleId":"345","severity":1,"message":"346","line":104,"column":19,"nodeType":"347","endLine":109,"endColumn":20},{"ruleId":"341","severity":1,"message":"342","line":176,"column":67,"nodeType":"343","messageId":"344","endLine":176,"endColumn":69},{"ruleId":"345","severity":1,"message":"346","line":177,"column":19,"nodeType":"347","endLine":182,"endColumn":20},{"ruleId":"341","severity":1,"message":"342","line":263,"column":67,"nodeType":"343","messageId":"344","endLine":263,"endColumn":69},{"ruleId":"345","severity":1,"message":"346","line":264,"column":19,"nodeType":"347","endLine":269,"endColumn":20},{"ruleId":"341","severity":1,"message":"342","line":350,"column":67,"nodeType":"343","messageId":"344","endLine":350,"endColumn":69},{"ruleId":"345","severity":1,"message":"346","line":351,"column":19,"nodeType":"347","endLine":356,"endColumn":20},{"ruleId":"341","severity":1,"message":"342","line":437,"column":67,"nodeType":"343","messageId":"344","endLine":437,"endColumn":69},{"ruleId":"345","severity":1,"message":"346","line":438,"column":19,"nodeType":"347","endLine":443,"endColumn":20},{"ruleId":"337","severity":1,"message":"359","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},"no-native-reassign",["360"],"no-negated-in-lhs",["361"],"no-unused-vars","'JwtDecode' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Input' is defined but never used.","'Pregunta' is defined but never used.",["360"],["361"],"'SET_ANSWER' is defined but never used.",["360"],["361"],"'role' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Grid' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]